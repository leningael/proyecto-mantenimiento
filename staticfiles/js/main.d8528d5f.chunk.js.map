{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","components/Logins.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","placeholder","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","src","width","to","Brand","Toggle","aria-controls","Collapse","Nav","href","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","alt","height","Rating","text","color","style","Product","Card","_id","Img","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","HomeScreen","search","useEffect","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","Image","fluid","ListGroup","description","countInStock","xs","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","Logins","LoginScreen","email","setEmail","password","setPassword","redirect","login","console","log","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","Id","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d8528d5f.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\n\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\n\r\nimport { cartReducer } from './reducers/cartReducers'\r\n\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n                placeholder='Busca los mejores productos para mascota'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-warning'\r\n                className='p-2'\r\n            >\r\n                Buscar\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"warningt\" variant=\"bg-warning\" expand=\"lg\" collapseOnSelect>\r\n                <Container><img src=\"https://raw.githubusercontent.com/metodosformalesds/MFDS_2022_T2_Code/main/LogoVetPet.png\" width=\"100px\"></img>\r\n                    <LinkContainer to='/'>\r\n                        \r\n                        <Navbar.Brand>vetpet</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox />\r\n                        <Nav className=\"ml-auto\">\r\n                        <a href='https://vetpet.azurewebsites.net/'>\r\n                        <Navbar.Brand>Veterinarias</Navbar.Brand>\r\n                    </a>\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Carrito</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Perfil</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Cerrar sesión</NavDropdown.Item>\r\n\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Inicar sesión</Nav.Link>\r\n                                    </LinkContainer>\r\n                                )}\r\n\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenue'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Usuarios</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Productos</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Ordenes</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; vetpet</Col>\r\n                     <img src=\"https://raw.githubusercontent.com/metodosformalesds/MFDS_2022_T2_Code/main/Appointment/static/img/mascotas.png\" alt=\"Girl in a jacket\" width=\"400\" height=\"300\"  ></img>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card, Button } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        \r\n    \r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n\r\n                <Card.Text as=\"h3\">\r\n                    ${product.price}\r\n                    \r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Cargando...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            \r\n\r\n            <h1>Productos en existencia</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        \r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Regresar</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Precio: ${product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Descripción: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Precio:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>En existencia:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? '   En Stock' : 'Fuera de Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Cant</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock == 0}\r\n                                                    type='button'>\r\n                                                    Agregar al carrito\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reseñas</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No hay reseñas</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Escribe una reseña</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Se ha subido tu reseña</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Bastante malo</option>\r\n                                                            <option value='2'>2 - Malo</option>\r\n                                                            <option value='3'>3 - Meh</option>\r\n                                                            <option value='4'>4 - Bien</option>\r\n                                                            <option value='5'>5 - Excelente</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Reseña</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Publicar\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Necesitas <Link to='/login'>iniciar sesión </Link>para publicar reseñas</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Carrito de compra</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Tu carrito está vacío <Link to='/'>Regresar</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                            ${item.price}\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) artículos</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Ir al pago\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","\r\n\r\n\r\n\r\nimport React, { useState, useEffect, Component } from 'react'\r\nimport {GoogleLogin} from \"react-google-login\"\r\nconst clientId=\"795948132843-dcfvnj4f58c0jisogn9qfqnsg20hat0f.apps.googleusercontent.com\"\r\n\r\nfunction Logins({ }) {\r\n    const onSuccess=(res)=>{\r\n        console.log(\"Login succes\",res.profileObj);\r\n      }\r\n      const onFailure=(res)=>{\r\n        console.log(\"Login failed\", res);\r\n      }\r\n\r\n\r\n    return (\r\n        <div id=\"signInButton\"> \r\n        <GoogleLogin\r\n            clientId={clientId}\r\n            buttonText=\"INICIAR SESIÓN\"\r\n            onSuccess={onSuccess}\r\n            onFailure={onFailure}\r\n            cookiePolicy={\"single_host_origin\"}\r\n            isSignedIn={true}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logins","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\nimport Logins from '../components/Logins';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport GoogleButton from 'react-google-button'\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n    const responseGoogle = (response) => {\r\n        console.log(response);\r\n      }\r\n      <GoogleLogin\r\n      clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\r\n      buttonText=\"Login\"\r\n      onSuccess={responseGoogle}\r\n      onFailure={responseGoogle}\r\n      cookiePolicy={'single_host_origin'}\r\n    />\r\n        \r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Acceder a cuenta</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Ingresa tu Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Ingresa tu Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Iniciar sesión\r\n\r\n                </Button>\r\n                \r\n\r\n            </Form>\r\n            <GoogleButton\r\n  onClick={() => { console.log('Google button clicked') }}\r\n/>\r\n            \r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Eres cliente nuevo?, si es así solo registrate y listo <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Registrar\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Registra una cuenta nueva</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Nombre</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirma tu Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Registrar cuenta\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    ¿Ya tienes cuenta? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Inicia sesión\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>Perfil</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Nombre</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirmar tu Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Actualiza tu perfil\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Ordenes</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Fecha</th>\r\n                                        <th>Total</th>\r\n                                        <th>Pagado</th>\r\n                                        <th>Recibido</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>${order.totalPrice}</td>\r\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className='btn-sm'>Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Iniciar sesión</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Iniciar sesión</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Envío</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Envío</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Pago</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Pago</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Confirmar orden</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Confirmar orden</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Envío</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Dirrección</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>Ciudad</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Código Postal</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>País</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            \r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Selecciona un método</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continuar\r\n                </Button>\r\n          \r\n            </Form>\r\n        </FormContainer>\r\n        \r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Envío</h2>\r\n\r\n                            <p>\r\n                                <strong>Información de envío: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Método de pago</h2>\r\n                            <p>\r\n                                <strong>Método seleccionado: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Artículos de la orden</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Tu carrito está vacío\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Información del pedido</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Artículos:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Envío:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Impuesto:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                 type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Confirmar orden\r\n                                </Button>\r\n                               \r\n                                \r\n                            </ListGroup.Item>\r\n                \r\n\r\n                        </ListGroup>           \r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeetpAe5qdHU2LnDoKjcw-PWtDJGA2RCGAAQFupjPNuTAclwdayUODEkIf90apRdw9N1_FbrBTjE34U1'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>Order: {order.Id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Envío </h2>\r\n                                    <p><strong>Nombre: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Direción de envío: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Se entregó  {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>No se ha entregado, continue con el proceso de pago</Message>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Método de pago</h2>\r\n                                    <p>\r\n                                        <strong>Método: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Pagado {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>No ha pagado</Message>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Artículos de la orden</h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        La orden no contiene productos\r\n                            </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Información del pedido</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Artículos:</Col>\r\n                                            <Col>${order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Envío:</Col>\r\n                                            <Col>${order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Impuesto:</Col>\r\n                                            <Col>${order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total:</Col>\r\n                                            <Col>${order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Loader />\r\n                                            ) : (\r\n                                                    <PayPalButton\r\n                                                        amount={order.totalPrice}\r\n                                                        onSuccess={successPaymentHandler}\r\n                                                    />\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Marcar como entregado\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Volver\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Editar info de Usuario</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Nombre</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email </Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Actualizar\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>${product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Ordenes</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USUARIO</th>\r\n                                    <th>FECHA</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAGADO</th>\r\n                                    <th>ENTREGADO</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Detalles\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import { Container } from 'react-bootstrap'\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path='/' component={HomeScreen} exact />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n\r\n          <Route path='/admin/productlist' component={ProductListScreen} />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n\r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}